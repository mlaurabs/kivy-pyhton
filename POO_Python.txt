*Orientação a Objetos em Python:

- Nas classes em python, existem dois tipos de atributos/variáveis: variável de classe: pertence à classe em si e variável de instância: pertence a cada objeto individuamente

class NomeClasse:
	var = valor
	...
	def NomeMetodo(self, arg,...):

- As variáveis e os métodos são escritos precedidos pelo nome da classe e por um ponto (.) 
– A variavel v definida numa classe C é escrita C.v

- Os métodos sempre têm self como primeiro argumento 
– self se refere a uma instância da classe

- Uma nova instância da classe é criada usando nomeClasse()

*Instanciando...
nomeObjeto = NomeClasse(parâmetros)

- Métodos construtores em Python são identificados por "init"
Basta definir na classe um método chamado __init__
Ex.: 
class Pessoa:
    def __init__(self, nome, idade): // método construtor
        self.nome = nome
        self.idade = idade

- Um atributo attr associado a uma instância obj tem nome: obj.attr

- Se queremos nos referir a um atributo attr de um objeto dentro da própria classe, usamos o nome self.attr
- Paralelo: self == this (em java)

- Em Python existem somente o public e o private e eles são definidos no próprio nome do atributo ou método.

• Atributos ou métodos iniciados por no máximo dois 
sublinhados (underline) são privados e todas as outras formas são públicas

